{"version":3,"sources":["logo.svg","serviceWorker.js","components/Song.jsx","components/Player/Player.jsx","components/Menu/SongList.jsx","App.jsx","index.jsx"],"names":["module","exports","__webpack_require__","p","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Song","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","render","react_default","a","createElement","song","name","artist","React","Component","defaultProps","id","album","year","artwork","duration","source","Player","timeVisual","updateTime","timestamp","Math","floor","setState","currentTime","updateScrubber","percent","document","querySelector","style","togglePlay","concat","playStatus","status","audio","getElementById","play","that","assertThisInitialized","setInterval","pause","returnToSongList","ReactDOM","src_App_0","className","backgroundImage","onClick","index_es","icon","faArrowLeft","size","opacity","Player_TrackInformation","Player_Scrubber","isPlaying","Player_Controls","Player_Timestamps","src","body","background","clearInterval","TrackInformation","Scrubber","Controls","classNames","contextIcon","faPause","faPlay","Timestamps","minutes","seconds","convertTime","SongList","playSong","transitioningScreen","animation","components_Player_Player","songs","map","height","width","margin","display","backgroundColor","borderRadius","textAlign","components_Song","key","tentative","App","title","userList","top","overflow","components_Menu_SongList","logo","alt","addEventListener","event","URL","process","href","origin","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.49009376.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.fbfb7a4a.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\n\r\nclass Song extends React.Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    };\r\n\r\n\r\n    render = () => {\r\n        return (\r\n            <p>{this.props.song.name} - <i>{this.props.song.artist}</i></p>\r\n        )\r\n    }\r\n}\r\n\r\nSong.defaultProps = {\r\n    song: {\r\n        id: \"0\",\r\n        name: \"Angel Voices\",\r\n        artist: \"VIRTUAL SELF\",\r\n        album: \"\",\r\n        year: 2018,\r\n        artwork: \"https://m.media-amazon.com/images/I/71VJ6MxpN8L._SS500_.jpg\",\r\n        duration: 392,\r\n        source: \"https://docs.google.com/uc?id=1TD5rZhiKZzC7-uwDCaB9EABeZkGEFQkQ&export=download\"\r\n    }\r\n};\r\n\r\nexport default Song","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlay, faPause, faArrowLeft } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport './Player.scss'\r\nimport App from '../../App.jsx';\r\n\r\n// Player\r\nclass Player extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            playStatus: 'play',\r\n            currentTime: 0\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.body.style.background = \"-webkit-linear-gradient(top, rgba(36,36,36,1) 0%,rgba(42,42,42,1) 12%,rgba(48,48,48,1) 25%,rgba(33,33,33,1) 39%,rgba(21,21,21,1) 50%,rgba(0,0,0,1) 51%,rgba(8,8,8,1) 60%,rgba(20,20,20,1) 76%,rgba(13,13,13,1) 91%,rgba(9,9,9,1) 100%)\";\r\n    }\r\n\r\n\r\n    timeVisual = 0;\r\n\r\n    updateTime = (timestamp) => {\r\n        timestamp = Math.floor(timestamp);\r\n        this.setState({ currentTime: timestamp });\r\n    };\r\n    updateScrubber = (percent) => {\r\n        // Set scrubber width\r\n        let innerScrubber = document.querySelector('.Scrubber-Progress');\r\n        innerScrubber.style['width'] = percent;\r\n    };\r\n    togglePlay = () => {\r\n        console.log(`Playback Status: ${this.state.playStatus}`)\r\n\r\n        let status = this.state.playStatus;\r\n        let audio = document.getElementById('audio');\r\n        if (status === 'play') {\r\n            status = 'pause';\r\n            audio.play();\r\n            let that = this;\r\n            this.timeVisual = setInterval(() => {\r\n                let currentTime = audio.currentTime;\r\n                let duration = that.props.song.duration;\r\n\r\n                // Calculate percent of song\r\n                let percent = (currentTime / duration) * 100 + '%';\r\n                that.updateScrubber(percent);\r\n                that.updateTime(currentTime);\r\n            }, 100);\r\n        } else {\r\n            status = 'play';\r\n            audio.pause();\r\n        }\r\n        this.setState({ playStatus: status });\r\n\r\n    }\r\n    returnToSongList = () => {\r\n        ReactDOM.render(<App />, document.getElementById('root'))\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div className=\"Player\" id='player'>\r\n                <div className=\"Background\" style={{ 'backgroundImage': 'url(' + this.props.song.artwork + ')' }}></div>\r\n                <div className=\"Header\">\r\n                    <p className=\"fa back\" onClick={this.returnToSongList}>\r\n                        <FontAwesomeIcon icon={faArrowLeft} size='2x' style={{ opacity: '.8' }} />\r\n                    </p>\r\n                    <div className=\"Title\">Current track</div>\r\n                    <p className=\"fa back\" onClick={() => console.log('honk honk mystery button')}>\r\n                        <FontAwesomeIcon icon={faArrowLeft} size='2x' style={{ opacity: '0' }} />\r\n                    </p>\r\n                </div>\r\n                <div className=\"Artwork\" style={{ 'backgroundImage': 'url(' + this.props.song.artwork + ')' }}></div>\r\n                <TrackInformation song={this.props.song} />\r\n                <Scrubber isPlaying={this.state.playStatus} />\r\n                <Controls isPlaying={this.state.playStatus} onClick={this.togglePlay} />\r\n                <Timestamps duration={this.props.song.duration} currentTime={this.state.currentTime} />\r\n                <audio id=\"audio\">\r\n                    <source src={this.props.song.source} />\r\n                </audio>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        if (this.state.playStatus === 'pause') this.togglePlay()\r\n        document.body.style.background = \"\";\r\n\r\n        console.log(`Navigating back to song list... `)\r\n\r\n        this.currentTime = 0;\r\n        clearInterval(this.timeVisual);\r\n    }\r\n}\r\nPlayer.defaultProps = {\r\n    song: {\r\n        name: \"Some song\",\r\n        artist: \"Some arti- wait\",\r\n        album: \"How did we get here\",\r\n        year: 3019,\r\n        artwork: \"https://m.media-amazon.com/images/I/71VJ6MxpN8L._SS500_.jpg\",\r\n        duration: 392,\r\n        source: \"https://docs.google.com/uc?id=1TD5rZhiKZzC7-uwDCaB9EABeZkGEFQkQ&export=download\"\r\n    }\r\n};\r\n\r\nclass TrackInformation extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"TrackInformation\">\r\n                <div className=\"Name\">{this.props.song.name}</div>\r\n                <div className=\"Artist\">{this.props.song.artist}</div>\r\n                <div className=\"Album\">{this.props.song.album} ({this.props.song.year})</div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nclass Scrubber extends React.Component {\r\n    render() {\r\n        let className;\r\n        className = this.props.isPlaying === 'pause' ?\r\n            'Scrubber-Progress play' : 'Scrubber-Progress pause'\r\n\r\n        return (\r\n            <div className=\"Scrubber\">\r\n                <div className={className}></div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nclass Controls extends React.Component {\r\n    render() {\r\n        let classNames;\r\n        let contextIcon;\r\n\r\n        if (this.props.isPlaying === 'pause') {\r\n            classNames = 'fa pause';\r\n            contextIcon = faPause\r\n        } else {\r\n            classNames = 'fa play';\r\n            contextIcon = faPlay\r\n        }\r\n\r\n        return (\r\n            <div className=\"Controls\">\r\n                <div onClick={this.props.onClick} className=\"Button\">\r\n                    <FontAwesomeIcon icon={contextIcon} size='2x' className={classNames} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nclass Timestamps extends React.Component {\r\n    convertTime(timestamp) {\r\n        let minutes = Math.floor(timestamp / 60);\r\n        let seconds = timestamp - (minutes * 60);\r\n        if (seconds < 10) {\r\n            seconds = '0' + seconds;\r\n        }\r\n        timestamp = minutes + ':' + seconds;\r\n        return timestamp;\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"Timestamps\">\r\n                <div className=\"Time Time--current\">{this.convertTime(this.props.currentTime)}</div>\r\n                <div className=\"Time Time--total\">{this.convertTime(this.props.duration)}</div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\n\r\n// Render the UI\r\n\r\n\r\nexport default Player","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\n\r\nimport Song from '../Song.jsx'\r\nimport Player from '../Player/Player.jsx'\r\n\r\nimport './SongList.scss'\r\n\r\nclass SongList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            tentative: props.tentative\r\n        }\r\n    }\r\n\r\n    playSong = (song) => {\r\n        let transitioningScreen = (<div style={{ animation: 'screen-lay-in .33s ease-out' }}>\r\n            <Player song={song} />\r\n        </div>)\r\n\r\n        ReactDOM.render(transitioningScreen, document.getElementById('root'));\r\n    }\r\n\r\n    render = () => {\r\n        let itemsElement = this.props.songs.map((song) => (\r\n            <div onClick={() => this.playSong(song)}\r\n                style={{\r\n                    height: '.40in', width: '90vw',\r\n                    margin: '5vw', display: 'inline-table',\r\n                    backgroundColor: 'teal', borderRadius: '5px',\r\n                    textAlign: 'center',\r\n                }}>\r\n                <Song key={song.id} song={song} />\r\n            </div >\r\n        ));\r\n\r\n\r\n        return itemsElement\r\n    }\r\n}\r\n\r\nSongList.defaultProps = {\r\n    tentative: true\r\n}\r\n\r\n//class Select\r\n\r\nexport default SongList","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport SongList from './components/Menu/SongList.jsx';\r\n\r\n//  EDIT SONGS HERE\r\nimport userList from './resources/songlist.json'\r\n\r\nclass App extends Component {\r\n  state = {\r\n    title: `Music App`,\r\n    body: `Hello hello, let's jam!`,\r\n\r\n    songs: userList\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"Main-Header\">\r\n          <p><b>{this.state.title}</b></p>\r\n        </header>\r\n\r\n        <div style={{ top: '0px', height: '60vh', overflow: 'auto' }}>\r\n          <SongList songs={this.state.songs} />\r\n        </div>\r\n\r\n        <footer className=\"Main-Footer\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <p><b>{this.state.body}</b></p>\r\n          <p><i>Made with love by Joe</i></p>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App","/*\r\n  Inspired by Jack Oliver's blogpost on CreativeBloq.\r\n  (https://www.creativebloq.com/how-to/build-a-simple-music-player-with-react)\r\n\r\nCreated by Joe Villegas in pursuit of learning\r\n  ReactJS.\r\n\r\n  Future functionality would include the playback of folder of music files \r\n  (like the ones from my discord bot) as well as from external sources such as YouTube)\r\n\r\n    @author (joevillegasisawesome@gmail.com)\r\n    @date   2/23/2019\r\n*/\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <App />, document.getElementById('root'));\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function (event) {\r\n  document.body.style.animation = 'initial-screen-slide-up-empty-full 1s';\r\n\r\n});\r\n\r\n\r\n\r\n\r\n//ReactDOM.render(<Player />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();"],"sourceRoot":""}